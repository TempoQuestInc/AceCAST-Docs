.. _howtouselink:

How to Use
===========

(Under Construction)

.. admonition:: Please Note: Preprocessing
   
        *The role of AceCAST is simply to accelerate the execution of WRF itself on GPUs. AceCAST does not include any other elements of a typical end-to-end workflow of WRF.*
        
        This means the user is responsible for running the following:
              *  **1.** Gathering initialization data.
              *  **2.** Running the WRF Preprocessing System (WPS).
                      *  **2A.** geogrid.exe
                      *  **2B.** ungrib.exe
                      *  **2C.** metgrid.exe

        **A user can use any WPS version they wish.** Since WPS is backwards compatible with WRF, a user can use the latest version of WPS, and the WPS files required to run real.exe, etc. will not cause compatiblity issues with AceCAST.

        **For your convenience, TempoQuest provides a real.exe executable in the ../AceCASTv1.2/run directory for host-side execution.** This means the user is required to transfer the necessary **met_em.d0** files generated by metgrid.exe to the **../AceCASTv1.2/run** directory in order to run **real.exe**. The user is also responsible for running real.exe as they would within a typical WRF workflow.

.. admonition:: Please Note: Benchmark Recommendation
   
        It is highly recommended that users run the test cases provided in the **../AceCASTv1.2/benchmarks** directory to familiarize themselves with AceCAST. For further information, please refer to the **Additional Information** section. 



First Step: Running Real (real.exe)
-----------------------------------

**1A.)** To run real.exe, please make sure you are in the **../AceCASTv1.2/run** directory where the real.exe executable resides.

**1B.)** Ensure you have properly installed the required dependencies (see :ref:`installation <installationlink>` for more information) and have set up the corresponding runtime environment correctly. To ensure a proper runtime environment is created, source the environment script (**env.sh**).

        **NOTE:** There are two ways to do this:
        
        **I.** Enter the following in the command line and press enter::
               
                $ source ../tqi-build/20.7/env.sh

        **II.** Copy the env.sh file to the run directory and then source the env.sh script. 
                
                **Step One:** Assuming you are in the **../AceCASTv1.2/run** directory, enter the following in the command line and press enter::
        
                        $ cp ../tqi-build/20.7/env.sh .

                **Step Two:** Next, enter the following in the command line and press enter::
              
                        $ source env.sh



Namelist Considerations
-----------------------

* AceCAST uses the same namelist options that are used by WRF with the exception that certain options are not yet supported. We have provided a summary of the most relevant supported packages :ref:`here <toolslink>` as well as in the README.namelist_support file. We have provided the "AceCAST Advisor" utility (run/acecast-advisor.sh) to help users modify their namelist to one that is supported by AceCAST (see previous link for more details).
* In addition, the acecast.exe executable performs a check for supported options at runtime and will terminate execution if an unsupported option is selected in the namelist (see the previous link for more details).

MPI Usage
---------

* AceCAST uses MPI for running on multiple GPUs just as CPU WRF does for running on multiple CPU cores. The recommended strategy is to launch one MPI rank per GPU. This is typically done using the gpu-launch.sh mpi wrapper script, which properly assigns a GPU to each rank using its rank number. Here are a couple of examples:
		
.. include:: _templates/mpi_table.txt

Scaling Considerations
----------------------

* Although GPUs typically offer far more performance potential than typical CPUs, they do require relatively large parallel workloads to efficiently utilize the thousands of CUDA execution cores available to each GPU. This means that it is not very efficient to use more GPUs than is necessary for a given domain's grid size. To assist AceCAST users we have provided the "AceCAST Advisor" utility (run/acecast-advisor.sh), which, in addition to assisting with namelist selection, will determine a good number of GPUs to use based on the given namelist and user's GPU compute architecture (See :ref:`tools <toolslink>` for more).



.. admonition:: A Note on Preprocessing
   
   The role of AceCAST is simply to accelerate the execution of WRF itself on GPUs. This does not include any other elements of a typical workflow such as the components of WPS or real.exe. These should be run as one would for CPU-WRF to generate the inputs for AceCAST (i.e. wrfinput*, wrfbdy*, etc.). For your convenience we have provided a real.exe binary for host-side execution..



