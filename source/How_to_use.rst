.. _howtouselink:

How to Use
==========

(Under Construction)

.. admonition:: Preprocessing
   
        The role of AceCAST is simply to accelerate the execution of WRF itself on GPUs. AceCAST does not 
	include any other elements of a typical end-to-end workflow of WRF. This means the user is 
	responsible for running the following:

		#. Gathering initialization data
		#. Running the WRF Preprocessing System (WPS) and real

		   * geogrid.exe
		   * ungrib.exe
		   * metgrid.exe
		   * real.exe

        A user can use *any WPS version* they wish. Since WPS is backwards compatible with WRF, a user 
	can use the latest version of WPS, and the WPS files required to run real.exe, etc. will not cause 
        compatiblity issues with AceCAST.

        **The user is required to transfer the necessary files generated by metgrid.exe (met_em* files) 
	to the *../AceCASTv1.2/run* directory**. The user is also responsible for runnning real.exe as they 
	would within a typical WRF workflow. For your convenience, TempoQuest provides a basic *real.exe*
	executable in the *../AceCASTv1.2/run* directory for host-side execution.

.. admonition:: Benchmark Recommendation
   
        It is highly recommended that users run the test cases provided in the *../AceCASTv1.2/benchmarks* 
	directory to familiarize themselves with AceCAST. For further information, please refer to the 
	:ref:`Tools <toolslink>` page.



First Step: Running Real (real.exe)
-----------------------------------

**1A.)** To run *real.exe*, please make sure you are in the *../AceCASTv1.2/run* directory where the *real.exe* executable resides.

**1B.)** Ensure you have properly installed the required dependencies 
(see :ref:`installation <installationlink>` for more information) and have set up the corresponding runtime 
environment correctly. To ensure a proper runtime environment is created, source the environment script 
(*env.sh*),


Either:
        
        **I.** Enter the following in the command line and press enter::
               
                $ source ../tqi-build/20.7/env.sh

Or:

        **II.** Copy the *env.sh* file to the run directory and then source the *env.sh* script: 
                
                Assuming you are in the *../AceCASTv1.2/run* directory, enter the following in the command line and press enter::
        
                        $ cp ../tqi-build/20.7/env.sh .

                Then, enter the following in the command line and press enter::
              
                        $ source env.sh


**1C.)** Lastly, run *real.exe* as you would in a typical WRF workflow by entering the following in the 
command line and pressing enter::

	$ mpirun -np 4 ./real.exe

.. admonition:: Please Note:
   
        *real.exe* generates the required files, wrfinput_d0* and wrfbdy_d01, that are needed to run AceCAST.


Second Step: Running AceCAST (acecast.exe)
------------------------------------------

At this point, it is assumed the user has run the WPS programs and *real.exe*. It is also assumed the user 
is in the *../AceCASTv1.2/run* directory.

**2A.)** First, source the environment script (env.sh). This script will need to be invoked every time a 
user logs in. See the earlier, *Step One: Running Real (real.exe)* on how to do this.
        
**2B.)** Modify the *namelist.input* file using an editor of your choice to ensure the settings are 
correct for your specific case.

.. admonition:: Please Note:

        *AceCAST uses the same namelist options that are used by WRF with the exception that certain 
	options are not yet supported. TempoQuest has provided a summary of the supported namelist 
	settings in the *README.namelist_support* file located in the *../AceCASTv1.2* directory.
        TempoQuest has also provided an AceCAST Advisor Script (*acecast-advisor.sh*) located in 
	the *../AceCAST/run* directory to assist users in modifying their namelist settings to 
	settings that are supported by AceCAST. More information about the supported namelist settings
	and the scaling advisor can be found in the :ref:`Tools <toolslink>` page.


**2C.)** After modifying your *namelist.input* file, it is good practice to run the AceCAST Advisor Script 
to ensure your chosen *namelist.input* settings are compatible with AceCAST:

       **I.** Make sure you are in the *../AceCASTv1.2/run* directory by entering the following in the 
       command line and pressing enter::
        
		$ pwd 

       This command should return something like::
        
		$ ../AceCASTv1.2/run

       **II.** Run the **AceCAST Advisor Namelist Support Check** by typing the following in the 
       command line and pressing enter::

		$ ./acecast-advisor.sh --tool support-check --namelist-file /path/to/file/namelist.input

       If the namelist.input file being checked uses supported options that **ARE** compatible with AceCAST, 
       you will see a similar message to the one below printed in the terminal::

                $ Support Check Configuration:
                  Namelist: ../AceCASTv1.2/run/namelist.input
                  AceCAST Version: 1.2
                  WRF Compatibility Version: 3.8.1
                  NOTE: Namelist options may be determined implicitly if not specified in the given namelist.
                  Support Check Tool Success: No unsupported options found - Ok to use namelist for AceCAST 
		  execution.

       If the namelist.input file being checked uses unsupported options that **ARE NOT** compatible with 
       AceCAST**, you will see a similar message to the one below printed in the terminal::

                $ Support Check Configuration:
                  Namelist: ../AceCASTv1.2/run/namelist.input
                  AceCAST Version: 1.2
                  WRF Compatibility Version: 3.8.1
                  NOTE: Namelist options may be determined implicitly if not specified in the given namelist.

                  Support Check Failure: Unsupported option selected for namelist variable mp_physics in 
                  &physics: mp_physics = 10
                  Supported options for namelist variable mp_physics: 0, 1, 6, 8, 28
                  Support Check Tool Failure: One or more options found that are not supported by AceCAST. 
                  Please modify your namelist selections based on the previous "SUPPORT CHECK FAILURE" 
                  messages and run this check again.

.. admonition:: Please Note:
        
        If a setting is not compatible, you will have to change this setting to a setting that is 
	compatible, and you will be required to re-run real.exe because any changes in the namelist.input 
	file will affect the wrfbdy_d01 and wrfinput files. Optionally, you can contact us :ref:`Contact us <supportlink>` 
	and we can try to implement your specific setting. 



**2D.)** After modifying your *namelist.input* file so it contains supported namelist settings compatible 
with AceCAST, it is good practice to run the AceCAST Advisor Script **again** with its Scaling Advisor to see 
how many GPUs you should use to run your simulation

.. admonition:: Please Note:

        This script should be run on the intended environment and machine that will be used to run AceCAST 
	in order for this tool to identify the critical information needed about the user's GPU 
	specifications.

To run the AceCAST Advisor Script with the scaling-advisor option:

        **I.** Make sure you are in the **../AceCASTv1.2/run** directory (see 2C)

        **II.** Run the AceCAST Advisor Script with the Scaling Advisor option by entering the 
	following in the command line and pressing enter::

                $ ./acecast-advisor.sh --tool scaling-advisor --namelist.file /path/to/file/namelist.input

        This will return a message to the screen that tells you the minimum and maximum number of GPUs 
	that should be used for your specific simulation, for example::

	
		$ AceCAST Scaling Advisor Recommendation:
			Minimum number of GPUs: 1 GPUs
			Maximum number of GPUs: 3 GPUs
		Scaling Advisor Tool Finished - Exiting



**2E.)** Transfer or link your AceCAST license file (*acecast-trial.lic*) to your 
**../AceCASTv1.2/run** directory. The reason you need to do this is because this 
license file is checked when AceCAST (*acecast.exe*) runs to ensure the user has a valid license:

        **I.** Copy the license file to the ../AceCASTv1.2/run directory.

        Or

        **II.** If you do not want to copy the license file to the ../AceCASTv1.2/run directory, 
	you can point the *RLM_LICENSE* environment variable to the location of the license 
	file by entering the following in the command line and pressing enter::

                $ export RLM_LICENSE=$HOME//AceCAST/run/acecast-trial.lic



**2F.)** After you have verified your namelist settings are compatible with AceCAST, and you have a rough
range of the number of GPUs you should use to optimize the time it will take to run your simulation, 
you can now run AceCAST.exe.AceCAST.exe uses the Message Passing Interface (MPI) for running on multiple 
GPUs just as CPU WRF does for running on multiple CPU cores. **The recommended strategy is to launch one 
MPI rank per GPU.** This is typically done using a "wrapper script" (*gpu-launch.sh*), which is included 
in the AceCAST download. This will properly assigns a GPU to each rank using its rank number. The wrapper 
script is located in the *../AceCASTv1.2/run* directory.

Here are some examples of how to run AceCAST using different MPI ranks:
		
.. include:: _templates/mpi_table.txt

To recap, after invoking a command to run AceCAST, AceCAST will run and the acecast.exe executable will 
perform a check for supported namelist options at runtime. If there is an unsupported namelist option 
within your namelist.input file, AceCAST will automatically terminate the job. Additionally, the acecast.exe 
executable will check the license file to ensure the user's license is active/valid. At the end of a 
successful AceCAST run, it will generate output in the rsl.out and rsl.error files similar to::
 
	Checking out AceCAST Licenses.
	RLM license checkout:
 	------------------------
 	Product: acecast
	Version: 1
	Count:   4
	------------------------	
	Successfully checked out licenses.
	...
	SUPPORT CHECK SUCCESS: Valid namelist configuration for AceCAST execution.


Scaling Considerations
----------------------

* Although GPUs typically offer far more performance potential than typical CPUs, they do 
  require relatively large parallel workloads to efficiently utilize the thousands of CUDA 
  execution cores available to each GPU. This means that it is not very efficient to use more 
  GPUs than is necessary for a given domain's grid size. 

