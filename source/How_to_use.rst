.. _howtouselink:

How to Use
===========

(Under Construction)

.. admonition:: Please Note: Preprocessing
   
        *The role of AceCAST is simply to accelerate the execution of WRF itself on GPUs. AceCAST does not include any other elements of a typical end-to-end workflow of WRF.*
        
        This means the user is responsible for running the following:
                *  **1.** Gathering initialization data.
                *  **2.** Running the WRF Preprocessing System (WPS).
                      *  **2A.** geogrid.exe
                      *  **2B.** ungrib.exe
                      *  **2C.** metgrid.exe

        **A user can use any WPS version they wish.** Since WPS is backwards compatible with WRF, a user can use the latest version of WPS, and the WPS files required to run real.exe, etc. will not cause compatiblity issues with AceCAST.

        **For your convenience, TempoQuest provides a real.exe executable in the ../AceCASTv1.2/run directory for host-side execution.** This means the user is required to transfer the necessary **met_em.d0** files generated by metgrid.exe to the **../AceCASTv1.2/run** directory in order to run **real.exe**. The user is also responsible for running real.exe as they would within a typical WRF workflow.

.. admonition:: Please Note: Benchmark Recommendation
   
        It is highly recommended that users run the test cases provided in the **../AceCASTv1.2/benchmarks** directory to familiarize themselves with AceCAST. For further information, please refer to the **Additional Information** section. 



First Step: Running Real (real.exe)
-----------------------------------

**1A.)** To run real.exe, please make sure you are in the **../AceCASTv1.2/run** directory where the real.exe executable resides.



**1B.)** Ensure you have properly installed the required dependencies (see :ref:`installation <installationlink>` for more information) and have set up the corresponding runtime environment correctly. To ensure a proper runtime environment is created, source the environment script (**env.sh**).

        **NOTE:** There are two ways to do this:
        
        **I.** Enter the following in the command line and press enter::
               
                $ source ../tqi-build/20.7/env.sh

        **II.** Copy the env.sh file to the run directory and then source the env.sh script. 
                
                **Step One:** Assuming you are in the **../AceCASTv1.2/run** directory, enter the following in the command line and press enter::
        
                        $ cp ../tqi-build/20.7/env.sh .

                **Step Two:** Next, enter the following in the command line and press enter::
              
                        $ source env.sh



**1C.)** Lastly, run real.exe as you would in a typical WRF workflow by entering the following in the command line and pressing enter::

        $ mpirun -np 4 ./real.exe

.. admonition:: Please Note:
   
        real.exe generates the required files, wrfinput_d0* and wrfbdy_d01, that are needed to run AceCAST.


Second Step: Running AceCAST (acecast.exe)
------------------------------------------

At this point, it is assumed the user has run WPS and real.exe. It is also assumed the user is in the **../AceCASTv1.2/run** directory.

**2A.)** Source the environment script (env.sh). 
        
        This script will need to be invoked every time a user logs in. This command assumes the user copied the environment script (**env.sh**) to the **../AceCASTv1.2/run** directory. Please refer to the following section for further information: **First Step: Running Real (real.exe), step 1B.).**        
        
        Source this script by entering the following in the command line and pressing enter::
        
        $ source env.sh



**2B.)** Modify the **namelist.input** file to ensure the settings are correct for your specific case.

.. admonition:: Please Note:

        *AceCAST uses the same namelist options that are used by WRF with the exception that certain options are not yet supported. TempoQuest has provided a summary of the supported namelist settings in the **README.namelist_support file located in the ../AceCASTv1.2 directory.*

        TempoQuest has also provided an **AceCAST Advisor Script (acecast-advisor.sh) located in the ../AceCAST/run directory** to assist users in modifying their namelist settings to settings that are supported by AceCAST. More information about this utility can be found under the **Additional Information** section.

Please follow the steps below to continue.

        **I.** To view the namelist.input file using VIM in the terminal, enter the following in the command line and press enter::
                
               $ vi namelist.input

        **II.** Next, enter insert mode in VIM by **pressing i**. This will allow you to modify the file.



**2C.)** After modifying your *namelist.input* file, it is good practice to run the AceCAST Advisor Script to ensure your chosen namelist.input settings are compatible with AceCAST. Additionally, a list of supported packages can be found here :ref:`here <toolslink>`. 

       **I.** Make sure you are in the **../AceCASTv1.2/run** directory by entering the following in the command line and pressing enter::
        
              $ pwd 

       This command should return something like::
        
              $ ../AceCASTv1.2/run

       **II.** Run the **AceCAST Advisor Namelist Support Check** by entering the following in the command line and pressing enter::

              $ ./acecast-advisor.sh --tool support-check --namelist-file /path/to/namelist.input/file

       For example::
        
              $ ./acecast-advisor.sh --tool support-check --namelist-file /gto/ttrask/AceCASTv1.2/run/namelist.input

       If the namelist.input file being checked **uses supported options that are compatible with AceCAST**, you will see a similar message to the one below printed in the terminal::

                $ Support Check Configuration:
                  Namelist: /gto/ttrask/AceCASTv1.2/run/namelist.input
                  AceCAST Version: 1.2
                  WRF Compatibility Version: 3.8.1
                  NOTE: Namelist options may be determined implicitly if not specified in the given namelist.
                  Support Check Tool Success: No unsupported options found - Ok to use namelist for AceCAST execution.

       If the namelist.input file being checked **uses unsupported options that are not compatible with AceCAST**, you will see a similar message to the one below printed in the terminal::

                $ Support Check Configuration:
                  Namelist: /gto/ttrask/AceCASTv1.2/run/namelist.input
                  AceCAST Version: 1.2
                  WRF Compatibility Version: 3.8.1
                  NOTE: Namelist options may be determined implicitly if not specified in the given namelist.

                  (For Example)
                  Support Check Failure: Unsupported option selected for namelist variable mp_physics in 
                  &physics: mp_physics = 10
                  Supported options for namelist variable mp_physics: 0, 1, 6, 8, 28
                  Support Check Tool Failure: One or more options found that are not supported by AceCAST. 
                  Please modify your namelist selections based on the previous "SUPPORT CHECK FAILURE" 
                  messages and run this check again.

.. admonition:: Please Note:
        
        **If a setting is not compatible, you will have to change this setting to a setting that is compatible, and you will be required to rerun real.exe because any changes in the namelist.input file will affect the wrfbdy_d01 and wrfinput files.**



**2D.)** After modifying your namelist.input file so it contains supported namelist settings compatible with AceCAST, it is good practice to run the AceCAST Advisor Script again with its Scaling Advisor to see how many GPUs you should use to run your simulation.

.. admonition:: Please Note:

        This script should be run on the intended environment and machine that will be used to run AceCAST in order for this tool to identify the critical information needed about the user's GPU specifications.

Please follow the steps below to continue.

        **I.** Make sure you are in the **../AceCASTv1.2/run** directory by entering the following in the command line and pressing enter::

               $ pwd

        This command should return something like::

               $ ../AceCASTv1.2/run

        **II.** Run the AceCAST Advisor Script with the Scaling Advisor option by entering the following in the command line and pressing enter::

                $ ./acecast-advisor.sh --tool scaling-advisor --namelist.file /path/to/namelist.input/file

        For example::

                $ ./acecast-advisor.sh --tool scaling-advisor --namelist-file /gto/ttrask/AceCASTv1.2/run/namelist.input

        This will return a message to the screen that tells you the minimum and maximum number of GPUs that should be used for your specific simulation.

        For example::

                $ AceCAST Scaling Advisor Recommendation:
                        Minimum number of GPUs: 1 GPUs
                        Maximum number of GPUs: 3 GPUs
                  Scaling Advisor Tool Finished - Exiting


MPI Usage
---------

* AceCAST uses MPI for running on multiple GPUs just as CPU WRF does for running on multiple CPU cores. The recommended strategy is to launch one MPI rank per GPU. This is typically done using the gpu-launch.sh mpi wrapper script, which properly assigns a GPU to each rank using its rank number. Here are a couple of examples:
		
.. include:: _templates/mpi_table.txt

Scaling Considerations
----------------------

* Although GPUs typically offer far more performance potential than typical CPUs, they do require relatively large parallel workloads to efficiently utilize the thousands of CUDA execution cores available to each GPU. This means that it is not very efficient to use more GPUs than is necessary for a given domain's grid size. To assist AceCAST users we have provided the "AceCAST Advisor" utility (run/acecast-advisor.sh), which, in addition to assisting with namelist selection, will determine a good number of GPUs to use based on the given namelist and user's GPU compute architecture (See :ref:`tools <toolslink>` for more).



.. admonition:: A Note on Preprocessing
   
   The role of AceCAST is simply to accelerate the execution of WRF itself on GPUs. This does not include any other elements of a typical workflow such as the components of WPS or real.exe. These should be run as one would for CPU-WRF to generate the inputs for AceCAST (i.e. wrfinput*, wrfbdy*, etc.). For your convenience we have provided a real.exe binary for host-side execution..



